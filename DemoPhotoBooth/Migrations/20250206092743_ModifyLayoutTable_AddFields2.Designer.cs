// <auto-generated />
using System;
using DemoPhotoBooth.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoPhotoBooth.Migrations
{
    [DbContext(typeof(CommonDbDataContext))]
    [Migration("20250206092743_ModifyLayoutTable_AddFields2")]
    partial class ModifyLayoutTable_AddFields2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.CommonData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrintCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrinterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CommonDatas");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.LayoutApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackgroudImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Height")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageFolderPath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LayoutImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QRLink")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SVGMappingName")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Width")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LayoutApp");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.PhotoApp", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadMediaTypes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FontColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxPrints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PhotoApps");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.SvgInfor", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LayoutAppId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LayoutAppId");

                    b.ToTable("SvgInfors");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.SvgRectTag", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsQRRect")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("No")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("SvgInforId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Width")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("X")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Y")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SvgInforId");

                    b.ToTable("SvgRectTags");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.SvgInfor", b =>
                {
                    b.HasOne("DemoPhotoBooth.Models.Entities.LayoutApp", "LayoutApp")
                        .WithMany("SvgInfors")
                        .HasForeignKey("LayoutAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LayoutApp");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.SvgRectTag", b =>
                {
                    b.HasOne("DemoPhotoBooth.Models.Entities.SvgInfor", "SvgInfor")
                        .WithMany("SvgRectTags")
                        .HasForeignKey("SvgInforId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SvgInfor");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.LayoutApp", b =>
                {
                    b.Navigation("SvgInfors");
                });

            modelBuilder.Entity("DemoPhotoBooth.Models.Entities.SvgInfor", b =>
                {
                    b.Navigation("SvgRectTags");
                });
#pragma warning restore 612, 618
        }
    }
}
